{"ast":null,"code":"import { generateId } from \"../utils/helpers\";\nexport const currentUser = {\n  id: \"user-1\",\n  name: \"You\",\n  phone: \"+1 234-567-8900\",\n  avatar: \"👤\",\n  online: true,\n  status: \"Hey there! I am using WhatsApp.\"\n};\nexport const mockUsers = [{\n  id: \"user-2\",\n  name: \"Sarah Johnson\",\n  phone: \"+1 234-567-8901\",\n  avatar: \"👩‍💼\",\n  online: true,\n  status: \"Working from home 🏠\"\n}, {\n  id: \"user-3\",\n  name: \"Mike Chen\",\n  phone: \"+1 234-567-8902\",\n  avatar: \"👨‍💻\",\n  online: false,\n  lastSeen: new Date(Date.now() - 2 * 60 * 60 * 1000),\n  status: \"Coding is life 💻\"\n}, {\n  id: \"user-4\",\n  name: \"Emma Davis\",\n  phone: \"+1 234-567-8903\",\n  avatar: \"👩‍🔬\",\n  online: true,\n  status: \"Science enthusiast 🔬\"\n}, {\n  id: \"user-5\",\n  name: \"David Wilson\",\n  phone: \"+1 234-567-8904\",\n  avatar: \"👨‍🎨\",\n  online: false,\n  lastSeen: new Date(Date.now() - 30 * 60 * 1000),\n  status: \"Creating art 🎨\"\n}, {\n  id: \"user-6\",\n  name: \"Lisa Park\",\n  phone: \"+1 234-567-8905\",\n  avatar: \"👩‍⚕️\",\n  online: true,\n  status: \"Helping others heal ❤️\"\n}];\nexport const mockMessages = [{\n  id: generateId(),\n  text: \"Hey! How are you doing?\",\n  senderId: \"user-2\",\n  chatId: \"chat-1\",\n  timestamp: new Date(Date.now() - 3600000),\n  status: \"read\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"I am doing great! Thanks for asking 😊 How about you?\",\n  senderId: currentUser.id,\n  chatId: \"chat-1\",\n  timestamp: new Date(Date.now() - 3300000),\n  status: \"read\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"That's awesome to hear! I'm doing well too.\",\n  senderId: \"user-2\",\n  chatId: \"chat-1\",\n  timestamp: new Date(Date.now() - 3000000),\n  status: \"read\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"What are your plans for the weekend?\",\n  senderId: \"user-2\",\n  chatId: \"chat-1\",\n  timestamp: new Date(Date.now() - 1800000),\n  status: \"delivered\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"Meeting at 3 PM today. Don't forget!\",\n  senderId: \"user-3\",\n  chatId: \"chat-2\",\n  timestamp: new Date(Date.now() - 7200000),\n  status: \"read\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"Got it! See you there 👍\",\n  senderId: currentUser.id,\n  chatId: \"chat-2\",\n  timestamp: new Date(Date.now() - 7000000),\n  status: \"read\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"Check out this amazing sunset! 🌅\",\n  senderId: \"user-4\",\n  chatId: \"chat-3\",\n  timestamp: new Date(Date.now() - 86400000),\n  status: \"read\",\n  type: \"text\"\n}, {\n  id: generateId(),\n  text: \"Wow! That's beautiful! Where was this taken?\",\n  senderId: currentUser.id,\n  chatId: \"chat-3\",\n  timestamp: new Date(Date.now() - 86200000),\n  status: \"read\",\n  type: \"text\"\n}];\nexport const mockChats = [{\n  id: \"chat-1\",\n  type: \"individual\",\n  participants: [currentUser.id, \"user-2\"],\n  lastMessage: mockMessages.find(m => m.chatId === \"chat-1\" && m.senderId === \"user-2\"),\n  unreadCount: 2,\n  createdAt: new Date(Date.now() - 86400000),\n  updatedAt: new Date(Date.now() - 1800000)\n}, {\n  id: \"chat-2\",\n  type: \"individual\",\n  participants: [currentUser.id, \"user-3\"],\n  lastMessage: mockMessages.find(m => m.chatId === \"chat-2\" && m.senderId === currentUser.id),\n  unreadCount: 0,\n  createdAt: new Date(Date.now() - 172800000),\n  updatedAt: new Date(Date.now() - 7000000)\n}, {\n  id: \"chat-3\",\n  type: \"individual\",\n  participants: [currentUser.id, \"user-4\"],\n  lastMessage: mockMessages.find(m => m.chatId === \"chat-3\" && m.senderId === currentUser.id),\n  unreadCount: 0,\n  createdAt: new Date(Date.now() - 259200000),\n  updatedAt: new Date(Date.now() - 86200000)\n}, {\n  id: \"chat-4\",\n  type: \"group\",\n  name: \"Family Group\",\n  participants: [currentUser.id, \"user-5\", \"user-6\"],\n  lastMessage: {\n    id: generateId(),\n    text: \"Dinner tomorrow at 7 PM?\",\n    senderId: \"user-5\",\n    chatId: \"chat-4\",\n    timestamp: new Date(Date.now() - 43200000),\n    status: \"delivered\",\n    type: \"text\"\n  },\n  unreadCount: 3,\n  createdAt: new Date(Date.now() - 604800000),\n  updatedAt: new Date(Date.now() - 43200000),\n  avatar: \"👨‍👩‍👧‍👦\"\n}];\nexport const mockContacts = mockUsers.map(user => ({\n  id: user.id,\n  name: user.name,\n  phone: user.phone,\n  avatar: user.avatar,\n  online: user.online,\n  isContact: true\n}));","map":{"version":3,"names":["generateId","currentUser","id","name","phone","avatar","online","status","mockUsers","lastSeen","Date","now","mockMessages","text","senderId","chatId","timestamp","type","mockChats","participants","lastMessage","find","m","unreadCount","createdAt","updatedAt","mockContacts","map","user","isContact"],"sources":["/project/sandbox/src/data/mockData.ts"],"sourcesContent":["import { User, Chat, Message, Contact } from \"../types\";\nimport { generateId } from \"../utils/helpers\";\n\nexport const currentUser: User = {\n  id: \"user-1\",\n  name: \"You\",\n  phone: \"+1 234-567-8900\",\n  avatar: \"👤\",\n  online: true,\n  status: \"Hey there! I am using WhatsApp.\",\n};\n\nexport const mockUsers: User[] = [\n  {\n    id: \"user-2\",\n    name: \"Sarah Johnson\",\n    phone: \"+1 234-567-8901\",\n    avatar: \"👩‍💼\",\n    online: true,\n    status: \"Working from home 🏠\",\n  },\n  {\n    id: \"user-3\",\n    name: \"Mike Chen\",\n    phone: \"+1 234-567-8902\",\n    avatar: \"👨‍💻\",\n    online: false,\n    lastSeen: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\n    status: \"Coding is life 💻\",\n  },\n  {\n    id: \"user-4\",\n    name: \"Emma Davis\",\n    phone: \"+1 234-567-8903\",\n    avatar: \"👩‍🔬\",\n    online: true,\n    status: \"Science enthusiast 🔬\",\n  },\n  {\n    id: \"user-5\",\n    name: \"David Wilson\",\n    phone: \"+1 234-567-8904\",\n    avatar: \"👨‍🎨\",\n    online: false,\n    lastSeen: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago\n    status: \"Creating art 🎨\",\n  },\n  {\n    id: \"user-6\",\n    name: \"Lisa Park\",\n    phone: \"+1 234-567-8905\",\n    avatar: \"👩‍⚕️\",\n    online: true,\n    status: \"Helping others heal ❤️\",\n  },\n];\n\nexport const mockMessages: Message[] = [\n  {\n    id: generateId(),\n    text: \"Hey! How are you doing?\",\n    senderId: \"user-2\",\n    chatId: \"chat-1\",\n    timestamp: new Date(Date.now() - 3600000),\n    status: \"read\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"I am doing great! Thanks for asking 😊 How about you?\",\n    senderId: currentUser.id,\n    chatId: \"chat-1\",\n    timestamp: new Date(Date.now() - 3300000),\n    status: \"read\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"That's awesome to hear! I'm doing well too.\",\n    senderId: \"user-2\",\n    chatId: \"chat-1\",\n    timestamp: new Date(Date.now() - 3000000),\n    status: \"read\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"What are your plans for the weekend?\",\n    senderId: \"user-2\",\n    chatId: \"chat-1\",\n    timestamp: new Date(Date.now() - 1800000),\n    status: \"delivered\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"Meeting at 3 PM today. Don't forget!\",\n    senderId: \"user-3\",\n    chatId: \"chat-2\",\n    timestamp: new Date(Date.now() - 7200000),\n    status: \"read\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"Got it! See you there 👍\",\n    senderId: currentUser.id,\n    chatId: \"chat-2\",\n    timestamp: new Date(Date.now() - 7000000),\n    status: \"read\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"Check out this amazing sunset! 🌅\",\n    senderId: \"user-4\",\n    chatId: \"chat-3\",\n    timestamp: new Date(Date.now() - 86400000),\n    status: \"read\",\n    type: \"text\",\n  },\n  {\n    id: generateId(),\n    text: \"Wow! That's beautiful! Where was this taken?\",\n    senderId: currentUser.id,\n    chatId: \"chat-3\",\n    timestamp: new Date(Date.now() - 86200000),\n    status: \"read\",\n    type: \"text\",\n  },\n];\n\nexport const mockChats: Chat[] = [\n  {\n    id: \"chat-1\",\n    type: \"individual\",\n    participants: [currentUser.id, \"user-2\"],\n    lastMessage: mockMessages.find(\n      (m) => m.chatId === \"chat-1\" && m.senderId === \"user-2\"\n    ),\n    unreadCount: 2,\n    createdAt: new Date(Date.now() - 86400000),\n    updatedAt: new Date(Date.now() - 1800000),\n  },\n  {\n    id: \"chat-2\",\n    type: \"individual\",\n    participants: [currentUser.id, \"user-3\"],\n    lastMessage: mockMessages.find(\n      (m) => m.chatId === \"chat-2\" && m.senderId === currentUser.id\n    ),\n    unreadCount: 0,\n    createdAt: new Date(Date.now() - 172800000),\n    updatedAt: new Date(Date.now() - 7000000),\n  },\n  {\n    id: \"chat-3\",\n    type: \"individual\",\n    participants: [currentUser.id, \"user-4\"],\n    lastMessage: mockMessages.find(\n      (m) => m.chatId === \"chat-3\" && m.senderId === currentUser.id\n    ),\n    unreadCount: 0,\n    createdAt: new Date(Date.now() - 259200000),\n    updatedAt: new Date(Date.now() - 86200000),\n  },\n  {\n    id: \"chat-4\",\n    type: \"group\",\n    name: \"Family Group\",\n    participants: [currentUser.id, \"user-5\", \"user-6\"],\n    lastMessage: {\n      id: generateId(),\n      text: \"Dinner tomorrow at 7 PM?\",\n      senderId: \"user-5\",\n      chatId: \"chat-4\",\n      timestamp: new Date(Date.now() - 43200000),\n      status: \"delivered\",\n      type: \"text\",\n    },\n    unreadCount: 3,\n    createdAt: new Date(Date.now() - 604800000),\n    updatedAt: new Date(Date.now() - 43200000),\n    avatar: \"👨‍👩‍👧‍👦\",\n  },\n];\n\nexport const mockContacts: Contact[] = mockUsers.map((user) => ({\n  id: user.id,\n  name: user.name,\n  phone: user.phone,\n  avatar: user.avatar,\n  online: user.online,\n  isContact: true,\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}