{"ast":null,"code":"var _jsxFileName = \"/project/workspace/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AuthProvider, useAuth } from './src/context/AuthContext';\nimport MainTabNavigator from './src/navigation/MainTabNavigator';\nimport ChatScreenFirebase from './src/screens/ChatScreenFirebase';\nimport ContactInfoScreen from './src/screens/ContactInfoScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport LoginScreen from './src/screens/auth/LoginScreen';\nimport SignUpScreen from './src/screens/auth/SignUpScreen';\nimport { Colors } from './src/constants/Colors';\nimport { NotificationService } from './src/services/notificationService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Stack = createStackNavigator();\nfunction AuthNavigator() {\n  const [showLogin, setShowLogin] = useState(true);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(StatusBar, {\n      style: \"dark\",\n      backgroundColor: Colors.background.default\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showLogin ? _jsxDEV(LoginScreen, {\n      onSwitchToSignUp: () => setShowLogin(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : _jsxDEV(SignUpScreen, {\n      onSwitchToLogin: () => setShowLogin(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\nfunction AppNavigator() {\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(StatusBar, {\n      style: \"light\",\n      backgroundColor: Colors.primary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: Colors.primary\n        },\n        headerTintColor: Colors.white,\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabNavigator,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Chat\",\n        component: ChatScreenFirebase,\n        options: ({\n          route\n        }) => ({\n          title: route.params.chatName,\n          headerBackTitleVisible: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"ContactInfo\",\n        component: ContactInfoScreen,\n        options: {\n          title: 'Contact Info'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen,\n        options: {\n          title: 'Settings'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nfunction AppContent() {\n  const {\n    user,\n    loading\n  } = useAuth();\n  const [notificationToken, setNotificationToken] = useState(null);\n  useEffect(() => {\n    if (user) {\n      initializeNotifications();\n    }\n  }, [user]);\n  const initializeNotifications = async () => {\n    try {\n      const token = await NotificationService.registerForPushNotifications();\n      if (token) {\n        setNotificationToken(token);\n        await NotificationService.updateUserToken(user.id, token);\n      }\n      await NotificationService.createNotificationCategories();\n      const notificationListener = NotificationService.addNotificationListener(notification => {\n        console.log('Notification received:', notification);\n        NotificationService.handleNotification(notification, (chatId, senderId) => {\n          console.log('New message in chat:', chatId, 'from:', senderId);\n        });\n      });\n      const responseListener = NotificationService.addNotificationResponseListener(response => {\n        console.log('Notification response:', response);\n      });\n      return () => {\n        notificationListener.remove();\n        responseListener.remove();\n      };\n    } catch (error) {\n      console.error('Notification initialization error:', error);\n      Alert.alert('Notifications', 'Failed to initialize push notifications. You may not receive message alerts.');\n    }\n  };\n  if (loading) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: Colors.background.default\n      },\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: Colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n  return user ? _jsxDEV(AppNavigator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 17\n  }, this) : _jsxDEV(AuthNavigator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 36\n  }, this);\n}\nexport default function App() {\n  const [appIsReady, setAppIsReady] = useState(false);\n  useEffect(() => {\n    async function prepare() {\n      try {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.warn('App preparation error:', e);\n      } finally {\n        setAppIsReady(true);\n      }\n    }\n    prepare();\n  }, []);\n  if (!appIsReady) {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: Colors.primary\n      },\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: Colors.white\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(SafeAreaProvider, {\n    children: _jsxDEV(AuthProvider, {\n      children: _jsxDEV(NavigationContainer, {\n        children: _jsxDEV(AppContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","StatusBar","SafeAreaProvider","View","ActivityIndicator","Alert","AuthProvider","useAuth","MainTabNavigator","ChatScreenFirebase","ContactInfoScreen","SettingsScreen","LoginScreen","SignUpScreen","Colors","NotificationService","jsxDEV","_jsxDEV","Fragment","_Fragment","Stack","AuthNavigator","showLogin","setShowLogin","children","style","backgroundColor","background","default","fileName","_jsxFileName","lineNumber","columnNumber","onSwitchToSignUp","onSwitchToLogin","AppNavigator","primary","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","white","headerTitleStyle","fontWeight","Screen","name","component","options","headerShown","route","title","params","chatName","headerBackTitleVisible","AppContent","user","loading","notificationToken","setNotificationToken","initializeNotifications","token","registerForPushNotifications","updateUserToken","id","createNotificationCategories","notificationListener","addNotificationListener","notification","console","log","handleNotification","chatId","senderId","responseListener","addNotificationResponseListener","response","remove","error","alert","flex","justifyContent","alignItems","size","color","App","appIsReady","setAppIsReady","prepare","Promise","resolve","setTimeout","e","warn"],"sources":["/project/workspace/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { View, ActivityIndicator, Alert } from 'react-native';\n\nimport { AuthProvider, useAuth } from './src/context/AuthContext';\nimport MainTabNavigator from './src/navigation/MainTabNavigator';\nimport ChatScreenFirebase from './src/screens/ChatScreenFirebase';\nimport ContactInfoScreen from './src/screens/ContactInfoScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport LoginScreen from './src/screens/auth/LoginScreen';\nimport SignUpScreen from './src/screens/auth/SignUpScreen';\nimport { RootStackParamList } from './src/types';\nimport { Colors } from './src/constants/Colors';\nimport { NotificationService } from './src/services/notificationService';\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction AuthNavigator() {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <>\n      <StatusBar style=\"dark\" backgroundColor={Colors.background.default} />\n      {showLogin ? (\n        <LoginScreen onSwitchToSignUp={() => setShowLogin(false)} />\n      ) : (\n        <SignUpScreen onSwitchToLogin={() => setShowLogin(true)} />\n      )}\n    </>\n  );\n}\n\nfunction AppNavigator() {\n  return (\n    <>\n      <StatusBar style=\"light\" backgroundColor={Colors.primary} />\n      <Stack.Navigator\n        initialRouteName=\"Main\"\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: Colors.primary,\n          },\n          headerTintColor: Colors.white,\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n        }}\n      >\n        <Stack.Screen \n          name=\"Main\" \n          component={MainTabNavigator} \n          options={{ headerShown: false }}\n        />\n        <Stack.Screen \n          name=\"Chat\" \n          component={ChatScreenFirebase} \n          options={({ route }) => ({ \n            title: route.params.chatName,\n            headerBackTitleVisible: false,\n          })}\n        />\n        <Stack.Screen \n          name=\"ContactInfo\" \n          component={ContactInfoScreen} \n          options={{ title: 'Contact Info' }}\n        />\n        <Stack.Screen \n          name=\"Settings\" \n          component={SettingsScreen} \n          options={{ title: 'Settings' }}\n        />\n      </Stack.Navigator>\n    </>\n  );\n}\n\nfunction AppContent() {\n  const { user, loading } = useAuth();\n  const [notificationToken, setNotificationToken] = useState<string | null>(null);\n\n  // Initialize notifications when user is authenticated\n  useEffect(() => {\n    if (user) {\n      initializeNotifications();\n    }\n  }, [user]);\n\n  const initializeNotifications = async () => {\n    try {\n      // Register for push notifications\n      const token = await NotificationService.registerForPushNotifications();\n      if (token) {\n        setNotificationToken(token);\n        // Update user's FCM token in Firestore\n        await NotificationService.updateUserToken(user!.id, token);\n      }\n\n      // Create notification categories\n      await NotificationService.createNotificationCategories();\n\n      // Listen for incoming notifications\n      const notificationListener = NotificationService.addNotificationListener(\n        (notification) => {\n          console.log('Notification received:', notification);\n          // Handle notification when app is in foreground\n          NotificationService.handleNotification(\n            notification,\n            (chatId, senderId) => {\n              console.log('New message in chat:', chatId, 'from:', senderId);\n              // You can show an in-app notification or update UI\n            }\n          );\n        }\n      );\n\n      // Listen for notification responses (when user taps notification)\n      const responseListener = NotificationService.addNotificationResponseListener(\n        (response) => {\n          console.log('Notification response:', response);\n          // This would handle navigation when user taps notification\n          // NotificationService.handleNotificationResponse(response, navigation);\n        }\n      );\n\n      // Cleanup listeners\n      return () => {\n        notificationListener.remove();\n        responseListener.remove();\n      };\n    } catch (error) {\n      console.error('Notification initialization error:', error);\n      Alert.alert(\n        'Notifications', \n        'Failed to initialize push notifications. You may not receive message alerts.'\n      );\n    }\n  };\n\n  // Show loading screen while checking authentication\n  if (loading) {\n    return (\n      <View style={{ \n        flex: 1, \n        justifyContent: 'center', \n        alignItems: 'center',\n        backgroundColor: Colors.background.default \n      }}>\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\n      </View>\n    );\n  }\n\n  // Show appropriate navigator based on authentication state\n  return user ? <AppNavigator /> : <AuthNavigator />;\n}\n\nexport default function App() {\n  const [appIsReady, setAppIsReady] = useState(false);\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        // Pre-load any resources, fonts, etc.\n        // This is where you'd load custom fonts, cache images, etc.\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate loading\n      } catch (e) {\n        console.warn('App preparation error:', e);\n      } finally {\n        setAppIsReady(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n  if (!appIsReady) {\n    return (\n      <View style={{ \n        flex: 1, \n        justifyContent: 'center', \n        alignItems: 'center',\n        backgroundColor: Colors.primary \n      }}>\n        <ActivityIndicator size=\"large\" color={Colors.white} />\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaProvider>\n      <AuthProvider>\n        <NavigationContainer>\n          <AppContent />\n        </NavigationContainer>\n      </AuthProvider>\n    </SafeAreaProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}