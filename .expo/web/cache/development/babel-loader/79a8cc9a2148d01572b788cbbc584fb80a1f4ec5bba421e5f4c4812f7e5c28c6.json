{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Colors } from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function StatusScreen() {\n  var handleAddStatus = function handleAddStatus() {\n    Alert.alert(\"Coming Soon\", \"Status update feature will be implemented\");\n  };\n  var handleViewStatus = function handleViewStatus(name) {\n    Alert.alert(\"Status Viewer\", `Viewing ${name}'s status`);\n  };\n  var statusUpdates = [{\n    id: \"1\",\n    name: \"Sarah Johnson\",\n    avatar: \"👩‍💼\",\n    time: \"45 minutes ago\",\n    viewed: false\n  }, {\n    id: \"2\",\n    name: \"Mike Chen\",\n    avatar: \"👨‍💻\",\n    time: \"2 hours ago\",\n    viewed: true\n  }, {\n    id: \"3\",\n    name: \"Emma Davis\",\n    avatar: \"👩‍🔬\",\n    time: \"5 hours ago\",\n    viewed: false\n  }, {\n    id: \"4\",\n    name: \"David Wilson\",\n    avatar: \"👨‍🎨\",\n    time: \"1 day ago\",\n    viewed: true\n  }];\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"My status\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.statusItem,\n        onPress: handleAddStatus,\n        children: [_jsxs(View, {\n          style: styles.avatarContainer,\n          children: [_jsx(Text, {\n            style: styles.myAvatar,\n            children: \"\\uD83D\\uDC64\"\n          }), _jsx(View, {\n            style: styles.addButton,\n            children: _jsx(Ionicons, {\n              name: \"add\",\n              size: 20,\n              color: Colors.white\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.statusInfo,\n          children: [_jsx(Text, {\n            style: styles.statusName,\n            children: \"My status\"\n          }), _jsx(Text, {\n            style: styles.statusTime,\n            children: \"Tap to add status update\"\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Recent updates\"\n      }), statusUpdates.map(function (status) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.statusItem,\n          onPress: function onPress() {\n            return handleViewStatus(status.name);\n          },\n          children: [_jsx(View, {\n            style: [styles.statusAvatarContainer, !status.viewed && styles.unviewedBorder],\n            children: _jsx(Text, {\n              style: styles.statusAvatar,\n              children: status.avatar\n            })\n          }), _jsxs(View, {\n            style: styles.statusInfo,\n            children: [_jsx(Text, {\n              style: styles.statusName,\n              children: status.name\n            }), _jsx(Text, {\n              style: styles.statusTime,\n              children: status.time\n            })]\n          })]\n        }, status.id);\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Muted updates\"\n      }), _jsxs(View, {\n        style: styles.emptySection,\n        children: [_jsx(Ionicons, {\n          name: \"volume-mute-outline\",\n          size: 48,\n          color: Colors.gray[400]\n        }), _jsx(Text, {\n          style: styles.emptyText,\n          children: \"No muted updates\"\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background.default\n  },\n  section: {\n    marginBottom: 24\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: \"600\",\n    color: Colors.text.secondary,\n    marginHorizontal: 16,\n    marginBottom: 8,\n    marginTop: 16\n  },\n  statusItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: Colors.white\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginRight: 16\n  },\n  myAvatar: {\n    fontSize: 48\n  },\n  addButton: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    width: 24,\n    height: 24,\n    backgroundColor: Colors.secondary,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: Colors.white\n  },\n  statusAvatarContainer: {\n    position: \"relative\",\n    marginRight: 16,\n    borderRadius: 30,\n    padding: 3\n  },\n  unviewedBorder: {\n    borderWidth: 2,\n    borderColor: Colors.secondary\n  },\n  statusAvatar: {\n    fontSize: 42\n  },\n  statusInfo: {\n    flex: 1\n  },\n  statusName: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: Colors.text.primary,\n    marginBottom: 2\n  },\n  statusTime: {\n    fontSize: 14,\n    color: Colors.text.secondary\n  },\n  emptySection: {\n    alignItems: \"center\",\n    paddingVertical: 32,\n    paddingHorizontal: 16\n  },\n  emptyText: {\n    fontSize: 16,\n    color: Colors.text.secondary,\n    marginTop: 8\n  }\n});","map":{"version":3,"names":["React","View","Text","ScrollView","TouchableOpacity","StyleSheet","Alert","Ionicons","Colors","jsx","_jsx","jsxs","_jsxs","StatusScreen","handleAddStatus","alert","handleViewStatus","name","statusUpdates","id","avatar","time","viewed","style","styles","container","children","section","sectionTitle","statusItem","onPress","avatarContainer","myAvatar","addButton","size","color","white","statusInfo","statusName","statusTime","map","status","statusAvatarContainer","unviewedBorder","statusAvatar","emptySection","gray","emptyText","create","flex","backgroundColor","background","default","marginBottom","fontSize","fontWeight","text","secondary","marginHorizontal","marginTop","flexDirection","alignItems","paddingHorizontal","paddingVertical","position","marginRight","bottom","right","width","height","borderRadius","justifyContent","borderWidth","borderColor","padding","primary"],"sources":["/project/workspace/src/screens/StatusScreen.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport { Colors } from \"../constants/Colors\";\n\nexport default function StatusScreen() {\n  const handleAddStatus = () => {\n    Alert.alert(\"Coming Soon\", \"Status update feature will be implemented\");\n  };\n\n  const handleViewStatus = (name: string) => {\n    Alert.alert(\"Status Viewer\", `Viewing ${name}'s status`);\n  };\n\n  const statusUpdates = [\n    {\n      id: \"1\",\n      name: \"Sarah Johnson\",\n      avatar: \"👩‍💼\",\n      time: \"45 minutes ago\",\n      viewed: false,\n    },\n    {\n      id: \"2\",\n      name: \"Mike Chen\",\n      avatar: \"👨‍💻\",\n      time: \"2 hours ago\",\n      viewed: true,\n    },\n    {\n      id: \"3\",\n      name: \"Emma Davis\",\n      avatar: \"👩‍🔬\",\n      time: \"5 hours ago\",\n      viewed: false,\n    },\n    {\n      id: \"4\",\n      name: \"David Wilson\",\n      avatar: \"👨‍🎨\",\n      time: \"1 day ago\",\n      viewed: true,\n    },\n  ];\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* My Status */}\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>My status</Text>\n        <TouchableOpacity style={styles.statusItem} onPress={handleAddStatus}>\n          <View style={styles.avatarContainer}>\n            <Text style={styles.myAvatar}>👤</Text>\n            <View style={styles.addButton}>\n              <Ionicons name=\"add\" size={20} color={Colors.white} />\n            </View>\n          </View>\n          <View style={styles.statusInfo}>\n            <Text style={styles.statusName}>My status</Text>\n            <Text style={styles.statusTime}>Tap to add status update</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      {/* Recent Updates */}\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Recent updates</Text>\n        {statusUpdates.map((status) => (\n          <TouchableOpacity\n            key={status.id}\n            style={styles.statusItem}\n            onPress={() => handleViewStatus(status.name)}\n          >\n            <View\n              style={[\n                styles.statusAvatarContainer,\n                !status.viewed && styles.unviewedBorder,\n              ]}\n            >\n              <Text style={styles.statusAvatar}>{status.avatar}</Text>\n            </View>\n            <View style={styles.statusInfo}>\n              <Text style={styles.statusName}>{status.name}</Text>\n              <Text style={styles.statusTime}>{status.time}</Text>\n            </View>\n          </TouchableOpacity>\n        ))}\n      </View>\n\n      {/* Muted Updates */}\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Muted updates</Text>\n        <View style={styles.emptySection}>\n          <Ionicons\n            name=\"volume-mute-outline\"\n            size={48}\n            color={Colors.gray[400]}\n          />\n          <Text style={styles.emptyText}>No muted updates</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background.default,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: \"600\",\n    color: Colors.text.secondary,\n    marginHorizontal: 16,\n    marginBottom: 8,\n    marginTop: 16,\n  },\n  statusItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: Colors.white,\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginRight: 16,\n  },\n  myAvatar: {\n    fontSize: 48,\n  },\n  addButton: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    width: 24,\n    height: 24,\n    backgroundColor: Colors.secondary,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: Colors.white,\n  },\n  statusAvatarContainer: {\n    position: \"relative\",\n    marginRight: 16,\n    borderRadius: 30,\n    padding: 3,\n  },\n  unviewedBorder: {\n    borderWidth: 2,\n    borderColor: Colors.secondary,\n  },\n  statusAvatar: {\n    fontSize: 42,\n  },\n  statusInfo: {\n    flex: 1,\n  },\n  statusName: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: Colors.text.primary,\n    marginBottom: 2,\n  },\n  statusTime: {\n    fontSize: 14,\n    color: Colors.text.secondary,\n  },\n  emptySection: {\n    alignItems: \"center\",\n    paddingVertical: 32,\n    paddingHorizontal: 16,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: Colors.text.secondary,\n    marginTop: 8,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}