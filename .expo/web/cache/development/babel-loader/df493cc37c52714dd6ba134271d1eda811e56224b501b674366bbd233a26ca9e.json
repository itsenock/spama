{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ChatsScreen from \"../screens/ChatsScreen\";\nimport StatusScreen from \"../screens/StatusScreen\";\nimport CallsScreen from \"../screens/CallsScreen\";\nimport { Colors } from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function MainTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === \"Chats\") {\n            iconName = focused ? \"chatbubbles\" : \"chatbubbles-outline\";\n          } else if (route.name === \"Status\") {\n            iconName = focused ? \"radio-button-on\" : \"radio-button-off\";\n          } else if (route.name === \"Calls\") {\n            iconName = focused ? \"call\" : \"call-outline\";\n          } else {\n            iconName = \"help-outline\";\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: Colors.primary,\n        tabBarInactiveTintColor: Colors.gray[500],\n        headerStyle: {\n          backgroundColor: Colors.primary\n        },\n        headerTintColor: Colors.white,\n        headerTitleStyle: {\n          fontWeight: \"bold\"\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Chats\",\n      component: ChatsScreen,\n      options: {\n        title: \"WhatsApp\",\n        tabBarBadge: 5\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Status\",\n      component: StatusScreen,\n      options: {\n        title: \"Status\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Calls\",\n      component: CallsScreen,\n      options: {\n        title: \"Calls\"\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","ChatsScreen","StatusScreen","CallsScreen","Colors","jsx","_jsx","jsxs","_jsxs","Tab","MainTabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","primary","tabBarInactiveTintColor","gray","headerStyle","backgroundColor","headerTintColor","white","headerTitleStyle","fontWeight","children","Screen","component","options","title","tabBarBadge"],"sources":["/project/workspace/src/navigation/MainTabNavigator.tsx"],"sourcesContent":["import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport ChatsScreen from \"../screens/ChatsScreen\";\nimport StatusScreen from \"../screens/StatusScreen\";\nimport CallsScreen from \"../screens/CallsScreen\";\nimport { MainTabParamList } from \"../types\";\nimport { Colors } from \"../constants/Colors\";\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\n\nexport default function MainTabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof Ionicons.glyphMap;\n\n          if (route.name === \"Chats\") {\n            iconName = focused ? \"chatbubbles\" : \"chatbubbles-outline\";\n          } else if (route.name === \"Status\") {\n            iconName = focused ? \"radio-button-on\" : \"radio-button-off\";\n          } else if (route.name === \"Calls\") {\n            iconName = focused ? \"call\" : \"call-outline\";\n          } else {\n            iconName = \"help-outline\";\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: Colors.primary,\n        tabBarInactiveTintColor: Colors.gray[500],\n        headerStyle: {\n          backgroundColor: Colors.primary,\n        },\n        headerTintColor: Colors.white,\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      })}\n    >\n      <Tab.Screen\n        name=\"Chats\"\n        component={ChatsScreen}\n        options={{\n          title: \"WhatsApp\",\n          tabBarBadge: 5, // Unread messages count\n        }}\n      />\n      <Tab.Screen\n        name=\"Status\"\n        component={StatusScreen}\n        options={{\n          title: \"Status\",\n        }}\n      />\n      <Tab.Screen\n        name=\"Calls\"\n        component={CallsScreen}\n        options={{\n          title: \"Calls\",\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,WAAW;AAElB,SAASC,MAAM;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,GAAG,GAAGV,wBAAwB,CAAmB,CAAC;AAExD,eAAe,SAASW,gBAAgBA,CAAA,EAAG;EACzC,OACEF,KAAA,CAACC,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAwC;UAE5C,IAAIN,KAAK,CAACO,IAAI,KAAK,OAAO,EAAE;YAC1BD,QAAQ,GAAGH,OAAO,GAAG,aAAa,GAAG,qBAAqB;UAC5D,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,QAAQ,EAAE;YAClCD,QAAQ,GAAGH,OAAO,GAAG,iBAAiB,GAAG,kBAAkB;UAC7D,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,OAAO,EAAE;YACjCD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAC9C,CAAC,MAAM;YACLG,QAAQ,GAAG,cAAc;UAC3B;UAEA,OAAOd,IAAA,CAACN,QAAQ;YAACqB,IAAI,EAAED,QAAS;YAACD,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAC/D,CAAC;QACDI,qBAAqB,EAAElB,MAAM,CAACmB,OAAO;QACrCC,uBAAuB,EAAEpB,MAAM,CAACqB,IAAI,CAAC,GAAG,CAAC;QACzCC,WAAW,EAAE;UACXC,eAAe,EAAEvB,MAAM,CAACmB;QAC1B,CAAC;QACDK,eAAe,EAAExB,MAAM,CAACyB,KAAK;QAC7BC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAC;IAAA,CAAE;IAAAC,QAAA,GAEH1B,IAAA,CAACG,GAAG,CAACwB,MAAM;MACTZ,IAAI,EAAC,OAAO;MACZa,SAAS,EAAEjC,WAAY;MACvBkC,OAAO,EAAE;QACPC,KAAK,EAAE,UAAU;QACjBC,WAAW,EAAE;MACf;IAAE,CACH,CAAC,EACF/B,IAAA,CAACG,GAAG,CAACwB,MAAM;MACTZ,IAAI,EAAC,QAAQ;MACba,SAAS,EAAEhC,YAAa;MACxBiC,OAAO,EAAE;QACPC,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACF9B,IAAA,CAACG,GAAG,CAACwB,MAAM;MACTZ,IAAI,EAAC,OAAO;MACZa,SAAS,EAAE/B,WAAY;MACvBgC,OAAO,EAAE;QACPC,KAAK,EAAE;MACT;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}