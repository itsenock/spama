{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../constants/Colors\";\nimport { formatChatTime, truncateText, getMessageStatusIcon } from \"../utils/helpers\";\nimport { currentUser } from \"../data/mockData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatItem(_ref) {\n  var chat = _ref.chat,\n    chatName = _ref.chatName,\n    avatar = _ref.avatar,\n    otherUser = _ref.otherUser,\n    onPress = _ref.onPress;\n  var lastMessage = chat.lastMessage;\n  var isOnline = (otherUser == null ? void 0 : otherUser.online) || false;\n  var getLastMessageText = function getLastMessageText() {\n    if (!lastMessage) return \"No messages yet\";\n    var prefix = lastMessage.senderId === currentUser.id ? \"You: \" : \"\";\n    return prefix + truncateText(lastMessage.text, 30);\n  };\n  var getLastMessageTime = function getLastMessageTime() {\n    if (!lastMessage) return \"\";\n    return formatChatTime(lastMessage.timestamp);\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.container,\n    onPress: onPress,\n    children: [_jsxs(View, {\n      style: styles.avatarContainer,\n      children: [_jsx(Text, {\n        style: styles.avatar,\n        children: avatar\n      }), isOnline && chat.type === \"individual\" && _jsx(View, {\n        style: styles.onlineIndicator\n      })]\n    }), _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.headerRow,\n        children: [_jsx(Text, {\n          style: styles.name,\n          numberOfLines: 1,\n          children: chatName\n        }), _jsxs(View, {\n          style: styles.timeContainer,\n          children: [_jsx(Text, {\n            style: styles.time,\n            children: getLastMessageTime()\n          }), lastMessage && lastMessage.senderId === currentUser.id && _jsx(Text, {\n            style: [styles.statusIcon, lastMessage.status === \"read\" && styles.readStatus],\n            children: getMessageStatusIcon(lastMessage.status)\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.messageRow,\n        children: [_jsx(Text, {\n          style: styles.lastMessage,\n          numberOfLines: 1,\n          children: getLastMessageText()\n        }), chat.unreadCount > 0 && _jsx(View, {\n          style: styles.unreadBadge,\n          children: _jsx(Text, {\n            style: styles.unreadText,\n            children: chat.unreadCount > 99 ? \"99+\" : chat.unreadCount\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: Colors.white,\n    borderBottomWidth: 1,\n    borderBottomColor: Colors.gray[100]\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginRight: 12\n  },\n  avatar: {\n    fontSize: 40,\n    textAlign: \"center\"\n  },\n  onlineIndicator: {\n    position: \"absolute\",\n    bottom: 2,\n    right: 2,\n    width: 12,\n    height: 12,\n    backgroundColor: Colors.status.online,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: Colors.white\n  },\n  contentContainer: {\n    flex: 1\n  },\n  headerRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 4\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: Colors.text.primary,\n    flex: 1,\n    marginRight: 8\n  },\n  timeContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  time: {\n    fontSize: 12,\n    color: Colors.text.light\n  },\n  statusIcon: {\n    fontSize: 12,\n    color: Colors.text.light,\n    marginLeft: 4\n  },\n  readStatus: {\n    color: Colors.secondary\n  },\n  messageRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  lastMessage: {\n    fontSize: 14,\n    color: Colors.text.secondary,\n    flex: 1,\n    marginRight: 8\n  },\n  unreadBadge: {\n    backgroundColor: Colors.secondary,\n    borderRadius: 10,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    minWidth: 20,\n    alignItems: \"center\"\n  },\n  unreadText: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    color: Colors.white\n  }\n});","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","Colors","formatChatTime","truncateText","getMessageStatusIcon","currentUser","jsx","_jsx","jsxs","_jsxs","ChatItem","_ref","chat","chatName","avatar","otherUser","onPress","lastMessage","isOnline","online","getLastMessageText","prefix","senderId","id","text","getLastMessageTime","timestamp","style","styles","container","children","avatarContainer","type","onlineIndicator","contentContainer","headerRow","name","numberOfLines","timeContainer","time","statusIcon","status","readStatus","messageRow","unreadCount","unreadBadge","unreadText","create","flexDirection","alignItems","paddingHorizontal","paddingVertical","backgroundColor","white","borderBottomWidth","borderBottomColor","gray","position","marginRight","fontSize","textAlign","bottom","right","width","height","borderRadius","borderWidth","borderColor","flex","justifyContent","marginBottom","fontWeight","color","primary","light","marginLeft","secondary","minWidth"],"sources":["/project/workspace/src/components/ChatItem.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport { Chat, User } from \"../types\";\nimport { Colors } from \"../constants/Colors\";\nimport {\n  formatChatTime,\n  truncateText,\n  getMessageStatusIcon,\n} from \"../utils/helpers\";\nimport { currentUser } from \"../data/mockData\";\n\ninterface ChatItemProps {\n  chat: Chat;\n  chatName: string;\n  avatar: string;\n  otherUser?: User;\n  onPress: () => void;\n}\n\nexport default function ChatItem({\n  chat,\n  chatName,\n  avatar,\n  otherUser,\n  onPress,\n}: ChatItemProps) {\n  const lastMessage = chat.lastMessage;\n  const isOnline = otherUser?.online || false;\n\n  const getLastMessageText = (): string => {\n    if (!lastMessage) return \"No messages yet\";\n\n    const prefix = lastMessage.senderId === currentUser.id ? \"You: \" : \"\";\n    return prefix + truncateText(lastMessage.text, 30);\n  };\n\n  const getLastMessageTime = (): string => {\n    if (!lastMessage) return \"\";\n    return formatChatTime(lastMessage.timestamp);\n  };\n\n  return (\n    <TouchableOpacity style={styles.container} onPress={onPress}>\n      <View style={styles.avatarContainer}>\n        <Text style={styles.avatar}>{avatar}</Text>\n        {isOnline && chat.type === \"individual\" && (\n          <View style={styles.onlineIndicator} />\n        )}\n      </View>\n\n      <View style={styles.contentContainer}>\n        <View style={styles.headerRow}>\n          <Text style={styles.name} numberOfLines={1}>\n            {chatName}\n          </Text>\n          <View style={styles.timeContainer}>\n            <Text style={styles.time}>{getLastMessageTime()}</Text>\n            {lastMessage && lastMessage.senderId === currentUser.id && (\n              <Text\n                style={[\n                  styles.statusIcon,\n                  lastMessage.status === \"read\" && styles.readStatus,\n                ]}\n              >\n                {getMessageStatusIcon(lastMessage.status)}\n              </Text>\n            )}\n          </View>\n        </View>\n\n        <View style={styles.messageRow}>\n          <Text style={styles.lastMessage} numberOfLines={1}>\n            {getLastMessageText()}\n          </Text>\n          {chat.unreadCount > 0 && (\n            <View style={styles.unreadBadge}>\n              <Text style={styles.unreadText}>\n                {chat.unreadCount > 99 ? \"99+\" : chat.unreadCount}\n              </Text>\n            </View>\n          )}\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: Colors.white,\n    borderBottomWidth: 1,\n    borderBottomColor: Colors.gray[100],\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginRight: 12,\n  },\n  avatar: {\n    fontSize: 40,\n    textAlign: \"center\",\n  },\n  onlineIndicator: {\n    position: \"absolute\",\n    bottom: 2,\n    right: 2,\n    width: 12,\n    height: 12,\n    backgroundColor: Colors.status.online,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: Colors.white,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  headerRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 4,\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: Colors.text.primary,\n    flex: 1,\n    marginRight: 8,\n  },\n  timeContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  time: {\n    fontSize: 12,\n    color: Colors.text.light,\n  },\n  statusIcon: {\n    fontSize: 12,\n    color: Colors.text.light,\n    marginLeft: 4,\n  },\n  readStatus: {\n    color: Colors.secondary,\n  },\n  messageRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  lastMessage: {\n    fontSize: 14,\n    color: Colors.text.secondary,\n    flex: 1,\n    marginRight: 8,\n  },\n  unreadBadge: {\n    backgroundColor: Colors.secondary,\n    borderRadius: 10,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    minWidth: 20,\n    alignItems: \"center\",\n  },\n  unreadText: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    color: Colors.white,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}