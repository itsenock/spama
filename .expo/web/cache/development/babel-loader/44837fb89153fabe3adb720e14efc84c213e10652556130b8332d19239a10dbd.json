{"ast":null,"code":"import { isRunningInExpoGo } from 'expo';\nfunction areWeTestingWithJest() {\n  return process.env.JEST_WORKER_ID !== undefined || process.env.NODE_ENV?.toLowerCase() === 'test';\n}\nif (isRunningInExpoGo() && !areWeTestingWithJest()) {\n  const message = '`expo-notifications` functionality is not fully supported in Expo Go:\\n' + 'We recommend you instead use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.';\n  console.warn(message);\n}\nexport { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';\nexport { default as unregisterForNotificationsAsync } from './unregisterForNotificationsAsync';\nexport { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';\nexport { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';\nexport { default as dismissNotificationAsync } from './dismissNotificationAsync';\nexport { default as dismissAllNotificationsAsync } from './dismissAllNotificationsAsync';\nexport { default as getNotificationChannelsAsync } from './getNotificationChannelsAsync';\nexport { default as getNotificationChannelAsync } from './getNotificationChannelAsync';\nexport { default as setNotificationChannelAsync } from './setNotificationChannelAsync';\nexport { default as deleteNotificationChannelAsync } from './deleteNotificationChannelAsync';\nexport { default as getNotificationChannelGroupsAsync } from './getNotificationChannelGroupsAsync';\nexport { default as getNotificationChannelGroupAsync } from './getNotificationChannelGroupAsync';\nexport { default as setNotificationChannelGroupAsync } from './setNotificationChannelGroupAsync';\nexport { default as deleteNotificationChannelGroupAsync } from './deleteNotificationChannelGroupAsync';\nexport { default as getBadgeCountAsync } from './getBadgeCountAsync';\nexport { default as setBadgeCountAsync } from './setBadgeCountAsync';\nexport { default as getAllScheduledNotificationsAsync } from './getAllScheduledNotificationsAsync';\nexport { default as scheduleNotificationAsync } from './scheduleNotificationAsync';\nexport { default as cancelScheduledNotificationAsync } from './cancelScheduledNotificationAsync';\nexport { default as cancelAllScheduledNotificationsAsync } from './cancelAllScheduledNotificationsAsync';\nexport { default as getNotificationCategoriesAsync } from './getNotificationCategoriesAsync';\nexport { default as setNotificationCategoryAsync } from './setNotificationCategoryAsync';\nexport { default as deleteNotificationCategoryAsync } from './deleteNotificationCategoryAsync';\nexport { default as getNextTriggerDateAsync } from './getNextTriggerDateAsync';\nexport { default as useLastNotificationResponse } from './useLastNotificationResponse';\nexport { setAutoServerRegistrationEnabledAsync } from './DevicePushTokenAutoRegistration.fx';\nexport { default as registerTaskAsync } from './registerTaskAsync';\nexport { default as unregisterTaskAsync } from './unregisterTaskAsync';\nexport * from './TokenEmitter';\nexport * from './NotificationsEmitter';\nexport * from './NotificationsHandler';\nexport * from './NotificationPermissions';\nexport * from './NotificationChannelGroupManager.types';\nexport * from './NotificationChannelManager.types';\nexport * from './NotificationPermissions.types';\nexport * from './Notifications.types';\nexport * from './Tokens.types';","map":{"version":3,"names":["isRunningInExpoGo","areWeTestingWithJest","process","env","JEST_WORKER_ID","undefined","NODE_ENV","toLowerCase","message","console","warn","default","getDevicePushTokenAsync","unregisterForNotificationsAsync","getExpoPushTokenAsync","getPresentedNotificationsAsync","dismissNotificationAsync","dismissAllNotificationsAsync","getNotificationChannelsAsync","getNotificationChannelAsync","setNotificationChannelAsync","deleteNotificationChannelAsync","getNotificationChannelGroupsAsync","getNotificationChannelGroupAsync","setNotificationChannelGroupAsync","deleteNotificationChannelGroupAsync","getBadgeCountAsync","setBadgeCountAsync","getAllScheduledNotificationsAsync","scheduleNotificationAsync","cancelScheduledNotificationAsync","cancelAllScheduledNotificationsAsync","getNotificationCategoriesAsync","setNotificationCategoryAsync","deleteNotificationCategoryAsync","getNextTriggerDateAsync","useLastNotificationResponse","setAutoServerRegistrationEnabledAsync","registerTaskAsync","unregisterTaskAsync"],"sources":["/project/workspace/node_modules/expo-notifications/src/index.ts"],"sourcesContent":["import { isRunningInExpoGo } from 'expo';\n\nfunction areWeTestingWithJest() {\n  return process.env.JEST_WORKER_ID !== undefined || process.env.NODE_ENV?.toLowerCase() === 'test';\n}\n\nif (isRunningInExpoGo() && !areWeTestingWithJest()) {\n  const message =\n    '`expo-notifications` functionality is not fully supported in Expo Go:\\n' +\n    'We recommend you instead use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.';\n  console.warn(message);\n}\n\nexport { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';\nexport { default as unregisterForNotificationsAsync } from './unregisterForNotificationsAsync';\nexport { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';\nexport { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';\nexport { default as dismissNotificationAsync } from './dismissNotificationAsync';\nexport { default as dismissAllNotificationsAsync } from './dismissAllNotificationsAsync';\nexport { default as getNotificationChannelsAsync } from './getNotificationChannelsAsync';\nexport { default as getNotificationChannelAsync } from './getNotificationChannelAsync';\nexport { default as setNotificationChannelAsync } from './setNotificationChannelAsync';\nexport { default as deleteNotificationChannelAsync } from './deleteNotificationChannelAsync';\nexport { default as getNotificationChannelGroupsAsync } from './getNotificationChannelGroupsAsync';\nexport { default as getNotificationChannelGroupAsync } from './getNotificationChannelGroupAsync';\nexport { default as setNotificationChannelGroupAsync } from './setNotificationChannelGroupAsync';\nexport { default as deleteNotificationChannelGroupAsync } from './deleteNotificationChannelGroupAsync';\nexport { default as getBadgeCountAsync } from './getBadgeCountAsync';\nexport { default as setBadgeCountAsync } from './setBadgeCountAsync';\nexport { default as getAllScheduledNotificationsAsync } from './getAllScheduledNotificationsAsync';\nexport { default as scheduleNotificationAsync } from './scheduleNotificationAsync';\nexport { default as cancelScheduledNotificationAsync } from './cancelScheduledNotificationAsync';\nexport { default as cancelAllScheduledNotificationsAsync } from './cancelAllScheduledNotificationsAsync';\nexport { default as getNotificationCategoriesAsync } from './getNotificationCategoriesAsync';\nexport { default as setNotificationCategoryAsync } from './setNotificationCategoryAsync';\nexport { default as deleteNotificationCategoryAsync } from './deleteNotificationCategoryAsync';\nexport { default as getNextTriggerDateAsync } from './getNextTriggerDateAsync';\nexport { default as useLastNotificationResponse } from './useLastNotificationResponse';\nexport { setAutoServerRegistrationEnabledAsync } from './DevicePushTokenAutoRegistration.fx';\nexport { default as registerTaskAsync } from './registerTaskAsync';\nexport { default as unregisterTaskAsync } from './unregisterTaskAsync';\nexport * from './TokenEmitter';\nexport * from './NotificationsEmitter';\nexport * from './NotificationsHandler';\nexport * from './NotificationPermissions';\nexport * from './NotificationChannelGroupManager.types';\nexport * from './NotificationChannelManager.types';\nexport * from './NotificationPermissions.types';\nexport * from './Notifications.types';\nexport * from './Tokens.types';\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,MAAM;AAExC,SAASC,oBAAoBA,CAAA;EAC3B,OAAOC,OAAO,CAACC,GAAG,CAACC,cAAc,KAAKC,SAAS,IAAIH,OAAO,CAACC,GAAG,CAACG,QAAQ,EAAEC,WAAW,EAAE,KAAK,MAAM;AACnG;AAEA,IAAIP,iBAAiB,EAAE,IAAI,CAACC,oBAAoB,EAAE,EAAE;EAClD,MAAMO,OAAO,GACX,yEAAyE,GACzE,iHAAiH;EACnHC,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;AACvB;AAEA,SAASG,OAAO,IAAIC,uBAAuB,QAAQ,2BAA2B;AAC9E,SAASD,OAAO,IAAIE,+BAA+B,QAAQ,mCAAmC;AAC9F,SAASF,OAAO,IAAIG,qBAAqB,QAAQ,yBAAyB;AAC1E,SAASH,OAAO,IAAII,8BAA8B,QAAQ,kCAAkC;AAC5F,SAASJ,OAAO,IAAIK,wBAAwB,QAAQ,4BAA4B;AAChF,SAASL,OAAO,IAAIM,4BAA4B,QAAQ,gCAAgC;AACxF,SAASN,OAAO,IAAIO,4BAA4B,QAAQ,gCAAgC;AACxF,SAASP,OAAO,IAAIQ,2BAA2B,QAAQ,+BAA+B;AACtF,SAASR,OAAO,IAAIS,2BAA2B,QAAQ,+BAA+B;AACtF,SAAST,OAAO,IAAIU,8BAA8B,QAAQ,kCAAkC;AAC5F,SAASV,OAAO,IAAIW,iCAAiC,QAAQ,qCAAqC;AAClG,SAASX,OAAO,IAAIY,gCAAgC,QAAQ,oCAAoC;AAChG,SAASZ,OAAO,IAAIa,gCAAgC,QAAQ,oCAAoC;AAChG,SAASb,OAAO,IAAIc,mCAAmC,QAAQ,uCAAuC;AACtG,SAASd,OAAO,IAAIe,kBAAkB,QAAQ,sBAAsB;AACpE,SAASf,OAAO,IAAIgB,kBAAkB,QAAQ,sBAAsB;AACpE,SAAShB,OAAO,IAAIiB,iCAAiC,QAAQ,qCAAqC;AAClG,SAASjB,OAAO,IAAIkB,yBAAyB,QAAQ,6BAA6B;AAClF,SAASlB,OAAO,IAAImB,gCAAgC,QAAQ,oCAAoC;AAChG,SAASnB,OAAO,IAAIoB,oCAAoC,QAAQ,wCAAwC;AACxG,SAASpB,OAAO,IAAIqB,8BAA8B,QAAQ,kCAAkC;AAC5F,SAASrB,OAAO,IAAIsB,4BAA4B,QAAQ,gCAAgC;AACxF,SAAStB,OAAO,IAAIuB,+BAA+B,QAAQ,mCAAmC;AAC9F,SAASvB,OAAO,IAAIwB,uBAAuB,QAAQ,2BAA2B;AAC9E,SAASxB,OAAO,IAAIyB,2BAA2B,QAAQ,+BAA+B;AACtF,SAASC,qCAAqC,QAAQ,sCAAsC;AAC5F,SAAS1B,OAAO,IAAI2B,iBAAiB,QAAQ,qBAAqB;AAClE,SAAS3B,OAAO,IAAI4B,mBAAmB,QAAQ,uBAAuB;AACtE,cAAc,gBAAgB;AAC9B,cAAc,wBAAwB;AACtC,cAAc,wBAAwB;AACtC,cAAc,2BAA2B;AACzC,cAAc,yCAAyC;AACvD,cAAc,oCAAoC;AAClD,cAAc,iCAAiC;AAC/C,cAAc,uBAAuB;AACrC,cAAc,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}