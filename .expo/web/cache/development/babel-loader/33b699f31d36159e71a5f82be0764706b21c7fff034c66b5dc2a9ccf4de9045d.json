{"ast":null,"code":"var _jsxFileName = \"/project/sandbox/src/context/AuthContext.tsx\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = createContext(undefined);\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [firebaseUser, setFirebaseUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = AuthService.onAuthStateChanged(async firebaseUser => {\n      setFirebaseUser(firebaseUser);\n      if (firebaseUser) {\n        const userData = await AuthService.getCurrentUserData();\n        setUser(userData);\n        await AuthService.updateUserStatus(firebaseUser.uid, true);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    const handleAppStateChange = async nextAppState => {\n      if (firebaseUser) {\n        const isOnline = nextAppState === 'active';\n        await AuthService.updateUserStatus(firebaseUser.uid, isOnline);\n      }\n    };\n    const handleVisibilityChange = async () => {\n      if (firebaseUser) {\n        const isOnline = !document.hidden;\n        await AuthService.updateUserStatus(firebaseUser.uid, isOnline);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [firebaseUser]);\n  const signIn = async (email, password) => {\n    try {\n      const userData = await AuthService.signInWithEmail(email, password);\n      setUser(userData);\n    } catch (error) {\n      console.error('Sign in error:', error);\n      throw error;\n    }\n  };\n  const signUp = async (email, password, name, phone) => {\n    try {\n      const userData = await AuthService.signUpWithEmail(email, password, name, phone);\n      setUser(userData);\n    } catch (error) {\n      console.error('Sign up error:', error);\n      throw error;\n    }\n  };\n  const signOut = async () => {\n    try {\n      await AuthService.signOut();\n      setUser(null);\n      setFirebaseUser(null);\n    } catch (error) {\n      console.error('Sign out error:', error);\n      throw error;\n    }\n  };\n  const updateProfile = async updates => {\n    try {\n      if (user) {\n        await AuthService.updateUserProfile(user.id, updates);\n        setUser(Object.assign({}, user, updates));\n      }\n    } catch (error) {\n      console.error('Update profile error:', error);\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    firebaseUser,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    updateProfile\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","context","Error","AuthProvider","children","user","setUser","firebaseUser","setFirebaseUser","loading","setLoading","unsubscribe","onAuthStateChanged","userData","getCurrentUserData","updateUserStatus","uid","handleAppStateChange","nextAppState","isOnline","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","signIn","email","password","signInWithEmail","error","console","signUp","name","phone","signUpWithEmail","signOut","updateProfile","updates","updateUserProfile","id","Object","assign","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/project/sandbox/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User as FirebaseUser } from 'firebase/auth';\nimport { User } from '../types';\nimport { AuthService } from '../services/authService';\n\ninterface AuthContextType {\n  user: User | null;\n  firebaseUser: FirebaseUser | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string, name: string, phone: string) => Promise<void>;\n  signOut: () => Promise<void>;\n  updateProfile: (updates: Partial<User>) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = AuthService.onAuthStateChanged(async (firebaseUser) => {\n      setFirebaseUser(firebaseUser);\n      \n      if (firebaseUser) {\n        // Get user data from Firestore\n        const userData = await AuthService.getCurrentUserData();\n        setUser(userData);\n        \n        // Update online status\n        await AuthService.updateUserStatus(firebaseUser.uid, true);\n      } else {\n        setUser(null);\n      }\n      \n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // Handle app state changes for online/offline status\n  useEffect(() => {\n    const handleAppStateChange = async (nextAppState: string) => {\n      if (firebaseUser) {\n        const isOnline = nextAppState === 'active';\n        await AuthService.updateUserStatus(firebaseUser.uid, isOnline);\n      }\n    };\n\n    // Note: In a real React Native app, you'd use AppState from react-native\n    // For now, we'll handle visibility change for web\n    const handleVisibilityChange = async () => {\n      if (firebaseUser) {\n        const isOnline = !document.hidden;\n        await AuthService.updateUserStatus(firebaseUser.uid, isOnline);\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [firebaseUser]);\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      const userData = await AuthService.signInWithEmail(email, password);\n      setUser(userData);\n    } catch (error) {\n      console.error('Sign in error:', error);\n      throw error;\n    }\n  };\n\n  const signUp = async (email: string, password: string, name: string, phone: string) => {\n    try {\n      const userData = await AuthService.signUpWithEmail(email, password, name, phone);\n      setUser(userData);\n    } catch (error) {\n      console.error('Sign up error:', error);\n      throw error;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await AuthService.signOut();\n      setUser(null);\n      setFirebaseUser(null);\n    } catch (error) {\n      console.error('Sign out error:', error);\n      throw error;\n    }\n  };\n\n  const updateProfile = async (updates: Partial<User>) => {\n    try {\n      if (user) {\n        await AuthService.updateUserProfile(user.id, updates);\n        setUser({ ...user, ...updates });\n      }\n    } catch (error) {\n      console.error('Update profile error:', error);\n      throw error;\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    firebaseUser,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    updateProfile,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}